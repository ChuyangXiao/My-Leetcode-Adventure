# -*- coding: utf-8 -*-
"""112. Path Sum.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XM1GIE49DQj3vBd8MtYpq8BPhMmlERo7
"""

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def hasPathSum(self, root: Optional[TreeNode], targetSum: int) -> bool:
        # if there are no node
        if root is None:
            return False
                
        remaining = targetSum - root.val
        
        # base case, if leaf node and remaining is 0 we have the path
        if remaining == 0 and root.left is None and root.right is None:
            return True
        
        # otherwise traverse left and right
        return self.hasPathSum(root.left, remaining) or self.hasPathSum(root.right, remaining)