# -*- coding: utf-8 -*-
"""77. Combinations.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zaAlzyT2M1G_d8-MzoLlgh9qVI6rAWoU
"""

class Solution(object):
    def combine(self, n, k):
        """
        :type n: int
        :type k: int
        :rtype: List[List[int]]
        """
        res = []
        self.backtrack(1, n, [], res, k)
        return res
    def backtrack(self, index, n, curr, res, k):
        if (len(curr) == k):
            res.append(curr[:])
            return
        for i in range(index, n+1):
            curr.append(i)
            self.backtrack(i+1, n, curr, res, k)
            curr.pop()