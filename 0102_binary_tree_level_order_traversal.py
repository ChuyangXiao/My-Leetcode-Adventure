# -*- coding: utf-8 -*-
"""102. Binary Tree Level Order Traversal.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1o4wnz9t5z-T0BQSFVFXh3OVeavxJ3Pgq
"""

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    
    def levelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:
        
        # Create a dict that projects level to nodes
        d = defaultdict(list)
        
        def bfs(node, level):
            if not node: return
            
            d[level].append(node.val)
            
            # Increment on the level until it reaches the height of the tree
            bfs(node.left, level+1)
            bfs(node.right, level+1)
            
        bfs(root, 0)
        return d.values()