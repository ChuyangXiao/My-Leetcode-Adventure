# -*- coding: utf-8 -*-
"""697. Degree of an Array.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19W4LHhqMQNwlR55Xp8H-057GrSb6DhOX
"""

class Solution:
    def findShortestSubArray(self, nums: List[int]) -> int:
        a = Counter(nums)
        max1 = max(a.values())
        temp = {}
        for i in range (len(nums)):
            if nums[i] not in temp and a[nums[i]] == max1:
                temp[nums[i]] = [i]
            elif nums[i] in temp and a[nums[i]] == max1:
                temp[nums[i]].append(i)
    
        min1 = 100000
        for i in temp:
            if abs(temp[i][0]-temp[i][-1]) < min1:
                min1 = abs(temp[i][0]-temp[i][-1])+1
        return min1