# -*- coding: utf-8 -*-
"""105. Construct Binary Tree from Preorder and Inorder Traversal.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-So0UsqfdCT4yoUyUOHyrzcDHVr9JuRZ
"""

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def buildTree(self, preorder: List[int], inorder: List[int]) -> Optional[TreeNode]:
        if not preorder or not inorder:
            return None
        else:
            # The root of the tree will always be the first element in the preorder
            root = TreeNode(val = preorder[0])
            mid = inorder.index(preorder[0])
            
            # Get the left branch and right branch in the same idea
            root.left = self.buildTree(preorder[1:mid+1], inorder[:mid])
            root.right = self.buildTree(preorder[mid+1:], inorder[mid+1:])
            return root