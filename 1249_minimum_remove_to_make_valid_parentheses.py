# -*- coding: utf-8 -*-
"""1249. Minimum Remove to Make Valid Parentheses.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1olpON_3W37dopw__XYtPfrhlQTndwoXf
"""

class Solution:
    def minRemoveToMakeValid(self, s: str) -> str:
        
    # First Pass - search for unbalanced ')'
        i = 0
        stack = []
        
        # Add each opening brace to a stack. On each closing brace, if there is no corresponding opening
        # one in the stack - then remove it. If there is, pop from the stack
        while i < len(s):
            if s[i] == '(':
                stack.append('(')
            if s[i] == ')':
                if stack:
                    stack.pop()
                else:
                    s = s[:i] + s[i+1:]
                    i -= 1
            i += 1
        
    # Second Pass - search for unbalanced '('
        stack = []
        i -= 1
        
        # Add each closing to a stack. On each opening check the stack.
        # Remove if unbalanced. If balanced, pop from the stack
        while i >= 0:
            if s[i] == ')':
                stack.append(')')
            if s[i] == '(':
                if stack: stack.pop()
                else:
                    s = s[:i] + s[i+1:]
            i -=1
        return s