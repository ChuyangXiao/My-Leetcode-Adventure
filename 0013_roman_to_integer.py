# -*- coding: utf-8 -*-
"""13. Roman to Integer.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qgd4s54WUEG_mMCEt2b02GaQioq96dOv
"""

class Solution(object):
    def romanToInt(self, s):
        """
        :type s: str
        :rtype: int
        """
        def value(r):
            if r == 'I':
                return 1
            elif r == 'V':
                return 5
            elif r == 'X':
                return 10
            elif r == 'L':
                return 50
            elif r == 'C':
                return 100
            elif r == 'D':
                return 500
            else:
                return 1000


        def romanToInt(s):
            result = 0
            for i in range(0,len(s)-1):
                a = value(s[i])
                #b = value(s[i+1])
                if(a< value(s[i+1])):
                    result -=a
                else:
                    result +=a
            result+= value(s[len(s)-1])
            return result
        return romanToInt(s)