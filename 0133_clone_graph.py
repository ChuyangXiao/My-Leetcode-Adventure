# -*- coding: utf-8 -*-
"""133. Clone Graph.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VKO61_m2X3F2kCjXoG2QiQC0UoZ_8tOm
"""

"""
# Definition for a Node.
class Node:
    def __init__(self, val = 0, neighbors = None):
        self.val = val
        self.neighbors = neighbors if neighbors is not None else []
"""

class Solution:
    def cloneGraph(self, node: 'Node') -> 'Node':
        
        # Create a hashmap that projects the old node to new node
        mymap={}
        
        def dfs(n):
            
            # If a node has been copied
            if n in mymap:
                return mymap[n]
            
            copy = Node(n.val)
                
            mymap[n] = copy
            for i in n.neighbors:
                copy.neighbors.append(dfs(i))
            
            return copy
        
        if node:
            return dfs(node)
        else:
            return None