# -*- coding: utf-8 -*-
"""674. Longest Continuous Increasing Subsequence.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Df-hVIun5erONeW1V8icDEXs6tq31KcF
"""

class Solution:
    def findLengthOfLCIS(self, nums: List[int]) -> int:
        ls = []
        count = 1
        if len(nums) == 1:
            return 1
        else:
            for i in range(len(nums)-1):
                if nums[i]<nums[i+1]:
                    count = count+1
                    if i == len(nums)-2:
                        ls.append(count)
                else:
                    ls.append(count)
                    count = 1
            result = max(ls)
            return result

