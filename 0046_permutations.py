# -*- coding: utf-8 -*-
"""46. Permutations.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pdD_MFwR3T4fP_VH2VbKNJVfpbIlIrY2
"""

class Solution(object):
    def permute(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        visited = set()
        res = []
        temp = []
        def dfs():
            if len(temp) == len(nums):
                res.append(temp[:])
                return
            for num in nums:
                if num in visited:
                    continue
                temp.append(num)
                visited.add(num)
                dfs()
                temp.pop()
                visited.remove(num)
        dfs()
        return res