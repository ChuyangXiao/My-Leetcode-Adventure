# -*- coding: utf-8 -*-
"""111. Minimum Depth of Binary Tree.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RtxYSlz_wA3OzEXczxRh1Lbs1m2LekWw
"""

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def minDepth(self, root: Optional[TreeNode]) -> int:
        if root == None:
            return 0

        queue = deque([root])
        depth = 0 
        while queue:
            depth +=1
            for i in range(len(queue)):
                elem = queue.popleft()
                if elem.left:
                    queue.append(elem.left)
                if elem.right:
                    queue.append(elem.right)
                if not elem.right and not elem.left:
                    return depth