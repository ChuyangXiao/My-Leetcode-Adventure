# -*- coding: utf-8 -*-
"""772. Basic Calculator III.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1S9yy7FrVetb78JQpXzfXTCMnmNquX4OR
"""

class Solution:
    def calculate(self, s: str) -> int:
        n = len(s)
        def dp(i):
            #if you see a () --> map it to a number and continue
            j = i
            num_stack, op_stack = [], []
            
            while j<n:
                
                if s[j] in ["+", "-", "*", "/"]:
                    op_stack.append(s[j])
                    j+=1
                    
                elif s[j] =="(":
                    mapped_num, l = dp(j+1)
                    
                    j= j+l+1 #move those many elements forwaerd
                    #print('mapped_num: ', mapped_num, num_stack)
                    if op_stack and op_stack[-1]=="-":
                        num_stack.append(-1*mapped_num)
                        
                    elif op_stack and op_stack[-1]=="*":
                        num_stack[-1] *= mapped_num
                        
                    elif op_stack and op_stack[-1]=="/":
                        num_stack[-1] = int(num_stack[-1]/mapped_num) 
                    
                    else: num_stack.append(mapped_num)
                    
                
                elif s[j]== ")":
                    
                    ans = sum(num_stack)
                    return ans, j-i+1
                
                else:
                    #cur_num
                    cur_num = 0
                    
                    while j<n and s[j].isdigit():
                        cur_num = 10*cur_num + int(s[j])
                        j+=1
                        
                    if op_stack and op_stack[-1]=="-":
                        num_stack.append(-1*cur_num)
                        
                    elif op_stack and op_stack[-1]=="*":
                        num_stack[-1] *= cur_num
                        
                    elif op_stack and op_stack[-1]=="/":
                        num_stack[-1] = int(num_stack[-1]/cur_num) 
                    
                    else: num_stack.append(cur_num)
                        
            return sum(num_stack), j-i+1
        
        return dp(0)[0]