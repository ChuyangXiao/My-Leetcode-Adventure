# -*- coding: utf-8 -*-
"""416. Partition Equal Subset Sum.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PkyQ2lNUqYZdDXE-mxlh3c3ZUyk_V6ZE
"""

class Solution:
    def canPartition(self, nums: List[int]) -> bool:
        # 1D DP solution
        length = len(nums)
        if length == 1: # edge case
            return False
        target = sum(nums)/2
        sumSet = set([0])
        for i in range(len(nums)):
            tempList = []
            for sumVal in sumSet:
                added = sumVal + nums[i]
                if added == target:
                    return True
                tempList.append(added)
                # The number of i-th position is either added or not added.
                # If the number is added, then it is inserted into the set.
                # If the number is not added, then the rest of the values
                # in the set already represent that.
            sumSet.update(tempList)
        return False