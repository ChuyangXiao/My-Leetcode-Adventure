# -*- coding: utf-8 -*-
"""5. Longest Palindromic Substring.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PGvD5fciaOEPf9jg4Ri_0UEBcqQo9W4o
"""

class Solution:
    def longestPalindrome(self, s: str) -> str:
        res = ''
        
        resLen = 0
        
        for i in range(len(s)):
            
            l, r = i,i
            while l>= 0 and r < len(s) and s[l] == s[r]:
                
                if (r-l+1)>resLen:
                    res = s[l:r+1]
                    resLen =r-l+1
                
                l-=1
                r+=1
            
            l, r = i,i+1
            while l>= 0 and r < len(s) and s[l] == s[r]:
                
                if (r-l+1)>resLen:
                    res = s[l:r+1]
                    resLen = r-l+1
                
                l-=1
                r+=1
                
        return res