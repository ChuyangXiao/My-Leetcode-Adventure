# -*- coding: utf-8 -*-
"""62. Unique Paths.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NB0cBXrfmg8vz-BPkGl2CYPySdznmkMi
"""

class Solution:
    def uniquePaths(self, m: int, n: int) -> int:
        grid = []
        for i in range(m):
            grid.append([0]*n)

        grid[m-1][n-1] = -1
        grid[m-1][n-2] = 1
        grid[m-2][n-1] = 1

        for col in range(n-1, -1, -1):
            for row in range(m-1, -1, -1):
                if grid[row][col] == 0:
                    ls = [(row+1, col), (row,col+1)]
                    for r,c in ls:
                        if 0<=r<m and 0<=c<n:
                            grid[row][col] = grid[r][c]+grid[row][col]
        
        return grid[0][0]