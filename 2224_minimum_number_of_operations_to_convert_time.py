# -*- coding: utf-8 -*-
"""2224. Minimum Number of Operations to Convert Time.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uv3q6wduTJwOGNlOBn_2qUXiaPAjSYfE
"""

class Solution(object):
    def convertTime(self, current, correct):
        """
        :type current: str
        :type correct: str
        :rtype: int
        """
        cur_hour = int(current.split(":")[0])
        cur_min = int(current.split(":")[1])

        cor_hour = int(correct.split(":")[0])
        cor_min = int(correct.split(":")[1])

        diff = (cor_hour - cur_hour)*60 + (cor_min - cur_min)
        coins = [1,5,15,60]
        dp = {}
        
        def func(amount):
            if amount == 0:
                return 0
            elif amount < 0:
                return float('infinity')
            elif amount in dp:
                return dp[amount]
            else:
                dp[amount] = min([1+func(amount-coin) for coin in coins])
                return dp[amount]

        ans = func(diff)
        
        return ans