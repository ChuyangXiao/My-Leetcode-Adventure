# -*- coding: utf-8 -*-
"""1010. Pairs of Songs With Total Durations Divisible by 60.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BNS414B4CNbs1Lm2wMo4rzPbm6RZz5nJ
"""

import math
class Solution:
    def numPairsDivisibleBy60(self, nums: List[int]) -> int:
        def nCr(n,r):
            f = math.factorial
            return f(n) // f(r) // f(n-r)

        d = {}
        for i in nums:
            rem = i%60
            if rem in d:
                d[rem] += 1
            else:
                d[rem] = 1

        if 0 in d and d[0]>=2:
            res0 = nCr(d[0],2)
            d.pop(0)
        else:
            res0 = 0
  
        if 30 in d and d[30] >=2:
            res30 = nCr(d[30],2)
            d.pop(30)
        else:
            res30 = 0
  

        rems = list(d.keys())
        rems.sort()
        res_else = 0

        for i,value in enumerate(rems):
            diff= 60-value
    
            if diff in rems:
                res_else += d[value]*d[diff]

  
        res = res0+res30+res_else/2


        return int(res)